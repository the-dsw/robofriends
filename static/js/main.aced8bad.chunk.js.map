{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACnD,gCACE,6BAAKJ,IACL,4BAAIC,WCOGI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,8BAEOA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OAAQ,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA5DQ,SCOhBC,EAbG,SAAC,GAAmC,EAAjCC,YAAkC,IAApBC,EAAmB,EAAnBA,aACjC,OACE,qBAAKV,UAAU,MAAf,SACI,uBACGA,UAAU,mCACVW,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCgBEC,E,kDAlBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAGG,KAAKJ,MAAMC,SACL,0DAEFG,KAAKX,MAAMK,a,GAhBKQ,aC8CZC,G,wDAxCb,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAd3C,EAAKX,MAAQ,CACZlB,OAAQ,GACRK,YAAa,KAJA,E,qDAQd,WAAqB,IAAD,OACpByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAK,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAQzC,WACA,MAA8BZ,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT8B,EAAkBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAW1B,OAAQmC,WAPvB,gD,GA1BgBX,cCKJiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aced8bad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    \t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n   \t\t <div>\r\n     \t\t <h2>{name}</h2>\r\n      \t\t<p>{email}</p>\r\n   \t\t </div>\r\n  \t</div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n return  (\r\n   <div>\r\n      {\r\n          robots.map((user, i) => {\r\n            return  <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n        })\r\n      }\r\n   </div>\r\n );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield,  searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n        <input \r\n           className='pa3 ba b--green bg-lightest-blue' \r\n           type=\"search\" \r\n            placeholder=\"search robots\"  \r\n            onChange={searchChange}\r\n          />\r\n  \t</div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n     return  <h1>Oooops. That is not good</h1>\r\n    } \r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass  App extends Component {\r\n  constructor() {\r\n\t  super()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ' '\r\n\t\t}\r\n  }\r\n\r\n  componentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users =>  this.setState({ robots: users}))\r\n\t \r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n\t  this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n\t\tconst {robots, searchfield} = this.state\r\n\t\tconst filteredRobots =  robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !robots.length ? \r\n\t\t\t<h1>Loading...</h1> :\r\n\t\t(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f2'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList  robots={filteredRobots} />  \r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}